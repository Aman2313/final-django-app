Lauching django app on a VM 


/////////////////////////////////////////////
tutorial links 

https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/

https://www.alibabacloud.com/blog/how-to-set-up-django-with-postgres-nginx-and-gunicorn-on-ubuntu-16-04_594319

git links 

https://github.com/dotja/django-docker-compose/blob/main/docker-compose.yml

/////////////////////////////////////////////

-----CLEAR FOLDERS IN A VM--------- 

rm -rfv /home/ubuntu/*

/////////////////////////////////////////////

      
      apt-get update

      apt-get install docker.io -y

      sudo curl -L "https://github.com/docker/compose/releases/download/1.25.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

      sudo chmod +x /usr/local/bin/docker-compose

      docker-compose --version
      
      mkdir test && cd test/
      
      mkdir app && cd app/

      apt-get install python3-venv

      python3.8 -m venv env

      apt-get install python3-pip python3-dev libpq-dev
    
      source env/bin/activate

      pip install django gunicorn psycopg2

      django-admin.py startproject hello .

      cd hello/
    
      vi settings.py --Change allowed host and 
                     --add 'import os' on top of file also
                     --add line at bottom ------ STATIC_ROOT = os.path.join(BASE_DIR, 'static')
      vi urls.py     ---  
                       from django.conf.urls.static import static
                       from django.conf import settings

                       urlpatterns = [
                          path('admin/', admin.site.urls),
                       ] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
      cd ..
    
      python manage.py makemigrations

      python manage.py migrate

      python manage.py collectstatic

      python manage.py runserver 0.0.0.0:8000

      exit

//////////////////////////////////////////////////////////////////







Dockerfile for app---- container 

//////////////////////////////////


FROM python:3.8.5-alpine

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1

ENV PYTHONUNBUFFERED 1

RUN pip install --upgrade pip

COPY ./requirements.txt .

RUN pip install -r requirements.txt

COPY ./entrypoint.sh .

COPY . .

ENTRYPOINT ["sh", "/usr/src/app/entrypoint.sh"]


///////////////////////////////////////////////







 entrypoint.sh file 

////////////////////////////////////

#!/bin/sh

python manage.py makemigrations 

python manage.py migrate 

python manage.py collectstatic 

gunicorn hello.wsgi:application --bind 0.0.0.0:8000

////////////////////////////////////////////

change permissions for entrypoint.sh ---- chmod +x entrypoint.sh





requirements.txt file 

///////////////////////////////////////

Django==3.0.8
gunicorn==20.0.4

/////////////////////////////////



make new folder nginx ..... make nginx Dockerfile and ....default.conf file 


///////////////////////////////



nginx Dockerfile 

//////////////////////////

FROM nginx:1.19.0-alpine

COPY ./default.conf /etc/nginx/conf.d/default.conf

//////////////////////////////




default.conf 

////////////////////////

upstream hello {

	server web:8000;
}

server {

	listen 80;

	location / {
		proxy_pass http://hello;
	}

	location /static/ {
		alias /static/;
	}
}

////////////////////////////////

docker-compose file 

////////////////////////////////


version: '3.7'

services:

  web:

    volumes:

      - static:/usr/src/app

    build: ./app

    ports:

      - "8000:8000"

  nginx:

    build: ./nginx

    volumes:

      - static:/usr/src/app

    ports:

      - "80:80"

    depends_on:

      - web

volumes:

  static:


/////////////////////////////


docker-compose up -d --build

docker-compose down -v


/////////////////////////////////



For Unix

To delete all containers including its volumes use,

docker rm -vf $(docker ps -a -q)

//////////////////////////

To delete all the images,

docker rmi -f $(docker images -a -q)

/////////////////////////////

Docker-Volumes 

docker volume ls
docker volume inspect volume_name

///////////////////////////////////////

Steps for creating docker container with docker-compose

tag docker images 


    docker images
    docker login
    docker tag cb9a2202ed03 amanbrar2313/nginx:1
    docker tag 0f0045c41564 amanbrar2313/web:1
    docker images
    docker push amanbrar2313/nginx
    docker push amanbrar2313/web

 
////////////////////////////////////////////////////////////

